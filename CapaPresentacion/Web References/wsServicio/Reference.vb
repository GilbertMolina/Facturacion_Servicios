'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.18444
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.18444.
'
Namespace wsServicio
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="wsTbServicioSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class wsTbServicio
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private TbServicioConsultarServiciosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TbServicioConsultarServicioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TbServicioConsultarServiciosFiltrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TbServicioInsertarServicioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TbServicioActualizarServicioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TbServicioEliminarServicioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.CapaPresentacion.My.MySettings.Default.CapaPresentacion_wsServicio1_wsTbServicio
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event TbServicioConsultarServiciosCompleted As TbServicioConsultarServiciosCompletedEventHandler
        
        '''<remarks/>
        Public Event TbServicioConsultarServicioCompleted As TbServicioConsultarServicioCompletedEventHandler
        
        '''<remarks/>
        Public Event TbServicioConsultarServiciosFiltrosCompleted As TbServicioConsultarServiciosFiltrosCompletedEventHandler
        
        '''<remarks/>
        Public Event TbServicioInsertarServicioCompleted As TbServicioInsertarServicioCompletedEventHandler
        
        '''<remarks/>
        Public Event TbServicioActualizarServicioCompleted As TbServicioActualizarServicioCompletedEventHandler
        
        '''<remarks/>
        Public Event TbServicioEliminarServicioCompleted As TbServicioEliminarServicioCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TbServicioConsultarServicios", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TbServicioConsultarServicios() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("TbServicioConsultarServicios", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TbServicioConsultarServiciosAsync()
            Me.TbServicioConsultarServiciosAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TbServicioConsultarServiciosAsync(ByVal userState As Object)
            If (Me.TbServicioConsultarServiciosOperationCompleted Is Nothing) Then
                Me.TbServicioConsultarServiciosOperationCompleted = AddressOf Me.OnTbServicioConsultarServiciosOperationCompleted
            End If
            Me.InvokeAsync("TbServicioConsultarServicios", New Object(-1) {}, Me.TbServicioConsultarServiciosOperationCompleted, userState)
        End Sub
        
        Private Sub OnTbServicioConsultarServiciosOperationCompleted(ByVal arg As Object)
            If (Not (Me.TbServicioConsultarServiciosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TbServicioConsultarServiciosCompleted(Me, New TbServicioConsultarServiciosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TbServicioConsultarServicio", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TbServicioConsultarServicio(ByVal pServicio As Servicio) As Servicio
            Dim results() As Object = Me.Invoke("TbServicioConsultarServicio", New Object() {pServicio})
            Return CType(results(0),Servicio)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TbServicioConsultarServicioAsync(ByVal pServicio As Servicio)
            Me.TbServicioConsultarServicioAsync(pServicio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TbServicioConsultarServicioAsync(ByVal pServicio As Servicio, ByVal userState As Object)
            If (Me.TbServicioConsultarServicioOperationCompleted Is Nothing) Then
                Me.TbServicioConsultarServicioOperationCompleted = AddressOf Me.OnTbServicioConsultarServicioOperationCompleted
            End If
            Me.InvokeAsync("TbServicioConsultarServicio", New Object() {pServicio}, Me.TbServicioConsultarServicioOperationCompleted, userState)
        End Sub
        
        Private Sub OnTbServicioConsultarServicioOperationCompleted(ByVal arg As Object)
            If (Not (Me.TbServicioConsultarServicioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TbServicioConsultarServicioCompleted(Me, New TbServicioConsultarServicioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TbServicioConsultarServiciosFiltros", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TbServicioConsultarServiciosFiltros(ByVal pDescripcion As String, ByVal pPrecioUnitario As Double) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("TbServicioConsultarServiciosFiltros", New Object() {pDescripcion, pPrecioUnitario})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TbServicioConsultarServiciosFiltrosAsync(ByVal pDescripcion As String, ByVal pPrecioUnitario As Double)
            Me.TbServicioConsultarServiciosFiltrosAsync(pDescripcion, pPrecioUnitario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TbServicioConsultarServiciosFiltrosAsync(ByVal pDescripcion As String, ByVal pPrecioUnitario As Double, ByVal userState As Object)
            If (Me.TbServicioConsultarServiciosFiltrosOperationCompleted Is Nothing) Then
                Me.TbServicioConsultarServiciosFiltrosOperationCompleted = AddressOf Me.OnTbServicioConsultarServiciosFiltrosOperationCompleted
            End If
            Me.InvokeAsync("TbServicioConsultarServiciosFiltros", New Object() {pDescripcion, pPrecioUnitario}, Me.TbServicioConsultarServiciosFiltrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnTbServicioConsultarServiciosFiltrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.TbServicioConsultarServiciosFiltrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TbServicioConsultarServiciosFiltrosCompleted(Me, New TbServicioConsultarServiciosFiltrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TbServicioInsertarServicio", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TbServicioInsertarServicio(ByVal pServicio As Servicio) As String
            Dim results() As Object = Me.Invoke("TbServicioInsertarServicio", New Object() {pServicio})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TbServicioInsertarServicioAsync(ByVal pServicio As Servicio)
            Me.TbServicioInsertarServicioAsync(pServicio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TbServicioInsertarServicioAsync(ByVal pServicio As Servicio, ByVal userState As Object)
            If (Me.TbServicioInsertarServicioOperationCompleted Is Nothing) Then
                Me.TbServicioInsertarServicioOperationCompleted = AddressOf Me.OnTbServicioInsertarServicioOperationCompleted
            End If
            Me.InvokeAsync("TbServicioInsertarServicio", New Object() {pServicio}, Me.TbServicioInsertarServicioOperationCompleted, userState)
        End Sub
        
        Private Sub OnTbServicioInsertarServicioOperationCompleted(ByVal arg As Object)
            If (Not (Me.TbServicioInsertarServicioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TbServicioInsertarServicioCompleted(Me, New TbServicioInsertarServicioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TbServicioActualizarServicio", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TbServicioActualizarServicio(ByVal pServicio As Servicio) As String
            Dim results() As Object = Me.Invoke("TbServicioActualizarServicio", New Object() {pServicio})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TbServicioActualizarServicioAsync(ByVal pServicio As Servicio)
            Me.TbServicioActualizarServicioAsync(pServicio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TbServicioActualizarServicioAsync(ByVal pServicio As Servicio, ByVal userState As Object)
            If (Me.TbServicioActualizarServicioOperationCompleted Is Nothing) Then
                Me.TbServicioActualizarServicioOperationCompleted = AddressOf Me.OnTbServicioActualizarServicioOperationCompleted
            End If
            Me.InvokeAsync("TbServicioActualizarServicio", New Object() {pServicio}, Me.TbServicioActualizarServicioOperationCompleted, userState)
        End Sub
        
        Private Sub OnTbServicioActualizarServicioOperationCompleted(ByVal arg As Object)
            If (Not (Me.TbServicioActualizarServicioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TbServicioActualizarServicioCompleted(Me, New TbServicioActualizarServicioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TbServicioEliminarServicio", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TbServicioEliminarServicio(ByVal pServicio As Servicio) As String
            Dim results() As Object = Me.Invoke("TbServicioEliminarServicio", New Object() {pServicio})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TbServicioEliminarServicioAsync(ByVal pServicio As Servicio)
            Me.TbServicioEliminarServicioAsync(pServicio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TbServicioEliminarServicioAsync(ByVal pServicio As Servicio, ByVal userState As Object)
            If (Me.TbServicioEliminarServicioOperationCompleted Is Nothing) Then
                Me.TbServicioEliminarServicioOperationCompleted = AddressOf Me.OnTbServicioEliminarServicioOperationCompleted
            End If
            Me.InvokeAsync("TbServicioEliminarServicio", New Object() {pServicio}, Me.TbServicioEliminarServicioOperationCompleted, userState)
        End Sub
        
        Private Sub OnTbServicioEliminarServicioOperationCompleted(ByVal arg As Object)
            If (Not (Me.TbServicioEliminarServicioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TbServicioEliminarServicioCompleted(Me, New TbServicioEliminarServicioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Servicio
        
        Private idServicioField As Integer
        
        Private descripcionField As String
        
        Private precioUnitarioField As Double
        
        Private idImpuestoField As Integer
        
        Private idEstadoField As Integer
        
        '''<comentarios/>
        Public Property IdServicio() As Integer
            Get
                Return Me.idServicioField
            End Get
            Set
                Me.idServicioField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Descripcion() As String
            Get
                Return Me.descripcionField
            End Get
            Set
                Me.descripcionField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property PrecioUnitario() As Double
            Get
                Return Me.precioUnitarioField
            End Get
            Set
                Me.precioUnitarioField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property IdImpuesto() As Integer
            Get
                Return Me.idImpuestoField
            End Get
            Set
                Me.idImpuestoField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property IdEstado() As Integer
            Get
                Return Me.idEstadoField
            End Get
            Set
                Me.idEstadoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub TbServicioConsultarServiciosCompletedEventHandler(ByVal sender As Object, ByVal e As TbServicioConsultarServiciosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TbServicioConsultarServiciosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub TbServicioConsultarServicioCompletedEventHandler(ByVal sender As Object, ByVal e As TbServicioConsultarServicioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TbServicioConsultarServicioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Servicio
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Servicio)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub TbServicioConsultarServiciosFiltrosCompletedEventHandler(ByVal sender As Object, ByVal e As TbServicioConsultarServiciosFiltrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TbServicioConsultarServiciosFiltrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub TbServicioInsertarServicioCompletedEventHandler(ByVal sender As Object, ByVal e As TbServicioInsertarServicioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TbServicioInsertarServicioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub TbServicioActualizarServicioCompletedEventHandler(ByVal sender As Object, ByVal e As TbServicioActualizarServicioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TbServicioActualizarServicioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub TbServicioEliminarServicioCompletedEventHandler(ByVal sender As Object, ByVal e As TbServicioEliminarServicioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TbServicioEliminarServicioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
