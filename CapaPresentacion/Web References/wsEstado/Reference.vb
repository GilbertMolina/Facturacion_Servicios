'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.18444
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.18444.
'
Namespace wsEstado
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="wsTbEstadoSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class wsTbEstado
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private TbPersonaConsultarEstadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TbEstadoConsultarEstadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TbEstadoInsertarEstadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TbEstadoActualizarEstadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TbEstadoEliminarEstadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.CapaPresentacion.My.MySettings.Default.CapaPresentacion_wsEstado_wsTbEstado
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event TbPersonaConsultarEstadosCompleted As TbPersonaConsultarEstadosCompletedEventHandler
        
        '''<remarks/>
        Public Event TbEstadoConsultarEstadoCompleted As TbEstadoConsultarEstadoCompletedEventHandler
        
        '''<remarks/>
        Public Event TbEstadoInsertarEstadoCompleted As TbEstadoInsertarEstadoCompletedEventHandler
        
        '''<remarks/>
        Public Event TbEstadoActualizarEstadoCompleted As TbEstadoActualizarEstadoCompletedEventHandler
        
        '''<remarks/>
        Public Event TbEstadoEliminarEstadoCompleted As TbEstadoEliminarEstadoCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TbPersonaConsultarEstados", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TbPersonaConsultarEstados() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("TbPersonaConsultarEstados", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TbPersonaConsultarEstadosAsync()
            Me.TbPersonaConsultarEstadosAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TbPersonaConsultarEstadosAsync(ByVal userState As Object)
            If (Me.TbPersonaConsultarEstadosOperationCompleted Is Nothing) Then
                Me.TbPersonaConsultarEstadosOperationCompleted = AddressOf Me.OnTbPersonaConsultarEstadosOperationCompleted
            End If
            Me.InvokeAsync("TbPersonaConsultarEstados", New Object(-1) {}, Me.TbPersonaConsultarEstadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnTbPersonaConsultarEstadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.TbPersonaConsultarEstadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TbPersonaConsultarEstadosCompleted(Me, New TbPersonaConsultarEstadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TbEstadoConsultarEstado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TbEstadoConsultarEstado(ByVal pEstado As Estado) As Estado
            Dim results() As Object = Me.Invoke("TbEstadoConsultarEstado", New Object() {pEstado})
            Return CType(results(0),Estado)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TbEstadoConsultarEstadoAsync(ByVal pEstado As Estado)
            Me.TbEstadoConsultarEstadoAsync(pEstado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TbEstadoConsultarEstadoAsync(ByVal pEstado As Estado, ByVal userState As Object)
            If (Me.TbEstadoConsultarEstadoOperationCompleted Is Nothing) Then
                Me.TbEstadoConsultarEstadoOperationCompleted = AddressOf Me.OnTbEstadoConsultarEstadoOperationCompleted
            End If
            Me.InvokeAsync("TbEstadoConsultarEstado", New Object() {pEstado}, Me.TbEstadoConsultarEstadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnTbEstadoConsultarEstadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.TbEstadoConsultarEstadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TbEstadoConsultarEstadoCompleted(Me, New TbEstadoConsultarEstadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TbEstadoInsertarEstado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TbEstadoInsertarEstado(ByVal pEstado As Estado) As String
            Dim results() As Object = Me.Invoke("TbEstadoInsertarEstado", New Object() {pEstado})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TbEstadoInsertarEstadoAsync(ByVal pEstado As Estado)
            Me.TbEstadoInsertarEstadoAsync(pEstado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TbEstadoInsertarEstadoAsync(ByVal pEstado As Estado, ByVal userState As Object)
            If (Me.TbEstadoInsertarEstadoOperationCompleted Is Nothing) Then
                Me.TbEstadoInsertarEstadoOperationCompleted = AddressOf Me.OnTbEstadoInsertarEstadoOperationCompleted
            End If
            Me.InvokeAsync("TbEstadoInsertarEstado", New Object() {pEstado}, Me.TbEstadoInsertarEstadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnTbEstadoInsertarEstadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.TbEstadoInsertarEstadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TbEstadoInsertarEstadoCompleted(Me, New TbEstadoInsertarEstadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TbEstadoActualizarEstado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TbEstadoActualizarEstado(ByVal pEstado As Estado) As String
            Dim results() As Object = Me.Invoke("TbEstadoActualizarEstado", New Object() {pEstado})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TbEstadoActualizarEstadoAsync(ByVal pEstado As Estado)
            Me.TbEstadoActualizarEstadoAsync(pEstado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TbEstadoActualizarEstadoAsync(ByVal pEstado As Estado, ByVal userState As Object)
            If (Me.TbEstadoActualizarEstadoOperationCompleted Is Nothing) Then
                Me.TbEstadoActualizarEstadoOperationCompleted = AddressOf Me.OnTbEstadoActualizarEstadoOperationCompleted
            End If
            Me.InvokeAsync("TbEstadoActualizarEstado", New Object() {pEstado}, Me.TbEstadoActualizarEstadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnTbEstadoActualizarEstadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.TbEstadoActualizarEstadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TbEstadoActualizarEstadoCompleted(Me, New TbEstadoActualizarEstadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TbEstadoEliminarEstado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TbEstadoEliminarEstado(ByVal pEstado As Estado) As String
            Dim results() As Object = Me.Invoke("TbEstadoEliminarEstado", New Object() {pEstado})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TbEstadoEliminarEstadoAsync(ByVal pEstado As Estado)
            Me.TbEstadoEliminarEstadoAsync(pEstado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TbEstadoEliminarEstadoAsync(ByVal pEstado As Estado, ByVal userState As Object)
            If (Me.TbEstadoEliminarEstadoOperationCompleted Is Nothing) Then
                Me.TbEstadoEliminarEstadoOperationCompleted = AddressOf Me.OnTbEstadoEliminarEstadoOperationCompleted
            End If
            Me.InvokeAsync("TbEstadoEliminarEstado", New Object() {pEstado}, Me.TbEstadoEliminarEstadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnTbEstadoEliminarEstadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.TbEstadoEliminarEstadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TbEstadoEliminarEstadoCompleted(Me, New TbEstadoEliminarEstadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Estado
        
        Private idEstadoField As Integer
        
        Private descripcionField As String
        
        '''<comentarios/>
        Public Property IdEstado() As Integer
            Get
                Return Me.idEstadoField
            End Get
            Set
                Me.idEstadoField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Descripcion() As String
            Get
                Return Me.descripcionField
            End Get
            Set
                Me.descripcionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub TbPersonaConsultarEstadosCompletedEventHandler(ByVal sender As Object, ByVal e As TbPersonaConsultarEstadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TbPersonaConsultarEstadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub TbEstadoConsultarEstadoCompletedEventHandler(ByVal sender As Object, ByVal e As TbEstadoConsultarEstadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TbEstadoConsultarEstadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Estado
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Estado)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub TbEstadoInsertarEstadoCompletedEventHandler(ByVal sender As Object, ByVal e As TbEstadoInsertarEstadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TbEstadoInsertarEstadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub TbEstadoActualizarEstadoCompletedEventHandler(ByVal sender As Object, ByVal e As TbEstadoActualizarEstadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TbEstadoActualizarEstadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub TbEstadoEliminarEstadoCompletedEventHandler(ByVal sender As Object, ByVal e As TbEstadoEliminarEstadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TbEstadoEliminarEstadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
